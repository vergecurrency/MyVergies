name: Build, test and deploy MyVergies

on: [push]

jobs:
  test:
    runs-on: macOS-latest

    strategy:
      matrix:
        node-version: [13.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@preview
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/npm-shrinkwrap.json') }}
          restore-keys: |
            ${{ runner.os }}-node${{ matrix.node-version }}-
      - name: npm install, lint and test
        run: |
          npm install
          npm run lint
          npm run test:unit:ci
        env:
          GRANAX_TOR_VERSION: 13.0.10

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 13.x
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - name: Cache node modules
        uses: actions/cache@preview
        if: contains(matrix.os, 'macOS') || contains(matrix.os, 'Ubuntu')
        with:
          path: node_modules
          key: ${{ runner.os }}-node13.x-${{ hashFiles('**/npm-shrinkwrap.json') }}
          restore-keys: |
            ${{ runner.os }}-node13.x-
      - name: add macOS signing certificate
        if: contains(matrix.os, 'macOS') && startsWith(github.ref, 'refs/tags/')
        run: |
          security create-keychain -p ${{ secrets.CSC_KEY_PASSWORD }} buildagent.keychain
          security unlock-keychain -p ${{ secrets.CSC_KEY_PASSWORD }} buildagent.keychain
          security list-keychains -d user -s buildagent.keychain
          security default-keychain -s buildagent.keychain
          security import ./dist_electron/certs/DeveloperIDApplication.p12 -k buildagent.keychain -P ${{ secrets.CSC_KEY_PASSWORD }} -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k ${{ secrets.CSC_KEY_PASSWORD }} buildagent.keychain
      - name: npm install and build
        run: |
          npm ci
          npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          APPLE_ASC_PROVIDER: ${{ secrets.APPLE_ASC_PROVIDER }}
          NOTARIZE: ${{ startsWith(github.ref, 'refs/tags/') }}
          GRANAX_TOR_VERSION: 10.0.15
      - name: Cleanup artifacts
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          npm run electron:clean:dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ matrix.os }}
          path: dist_electron
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: 'dist_electron/**'
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
